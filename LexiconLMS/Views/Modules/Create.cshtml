@model LexiconLMS.Models.ModuleCreateViewModel

@{
    ViewBag.Title = "Create";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    @Html.HiddenFor(x => x.CourseId)

    if (Model.Module != null)
    {
        @Html.HiddenFor(x => x.Module.Id)
    }

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Module.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Module.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Module.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Module.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Module.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Module.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Module.StartDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Module.StartDate, new { htmlAttributes = new { @class = "form-control datepicker" } })
                @Html.ValidationMessageFor(model => model.Module.StartDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Module.EndDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Module.EndDate, new { htmlAttributes = new { @class = "form-control datepicker" } })
                @Html.ValidationMessageFor(model => model.Module.EndDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="@( ((Model.Module != null) ? "Spara ändringar" : "Lägg till") )" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<table class="table">
    <tr>
        <th>@Html.DisplayNameFor(x => x.Module.Name)</th>
        <th>@Html.DisplayNameFor(x => x.Module.Description)</th>
        <th>@Html.DisplayNameFor(x => x.Module.StartDate)</th>
        <th>@Html.DisplayNameFor(x => x.Module.EndDate)</th>
        <th></th>
        <th></th>
    </tr>
    @foreach (var module in Model.Modules)
    {
        <tr>
            <td>@Html.DisplayFor(x => module.Name)</td>
            <td>@Html.DisplayFor(x => module.Description)</td>
            <td>@Html.DisplayFor(x => module.StartDate)</td>
            <td>@Html.DisplayFor(x => module.EndDate)</td>
            <td>@Html.ActionLink("Redigera", "Create", new { courseId = Model.CourseId, moduleId = module.Id })</td>
            <td>@Html.ActionLink("Ta bort", "Delete", new { Id = module.Id })</td>
        </tr>
    }
</table>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/datepicker")
}