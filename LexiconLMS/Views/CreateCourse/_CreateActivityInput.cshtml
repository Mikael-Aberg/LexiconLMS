@model LexiconLMS.Models.ActivityCreateViewModel

@Html.AntiForgeryToken()

@Html.HiddenFor(x => x.CourseId)

@if (Model.Activity != null)
{
    @Html.HiddenFor(x => x.Activity.Id)
}

<div class="form-horizontal">
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.Activity.Name, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Activity.Name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Activity.Name, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Activity.Description, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Activity.Description, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Activity.Description, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Activity.StartTime, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Activity.StartTime, new { htmlAttributes = new { @class = "form-control activityDatepicker" } })
            @Html.ValidationMessageFor(model => model.Activity.StartTime, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Activity.EndTime, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Activity.EndTime, new { htmlAttributes = new { @class = "form-control activityDatepicker" } })
            @Html.ValidationMessageFor(model => model.Activity.EndTime, "", new { @class = "text-danger" })
        </div>
    </div>

    @if (Model.Modules != null)
    {
        if (Model.Modules.Count > 0)
        {
            <div class="form-group">
                @Html.LabelFor(model => model.Activity.Module, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("Activity.ModuelId", Model.ModuleList, "", new { @class = "form-control", @id = "ActivityDropDown" })
                    @Html.ValidationMessageFor(model => model.Activity.Module, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Activity.Type, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("Activity.TypeId", Model.Types, "", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Activity.Type, "", new { @class = "text-danger" })
                </div>
            </div>
        }
    }
</div>