@model LexiconLMS.Models.ActivityCreateViewModel

@{
    ViewBag.Title = "Create";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    @Html.HiddenFor(x => x.CourseId)

    if (Model.Activity != null)
    {
        @Html.HiddenFor(x => x.Activity.Id)
    }

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Activity.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Activity.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Activity.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Activity.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Activity.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Activity.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Activity.StartTime, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Activity.StartTime, new { htmlAttributes = new { @class = "form-control datepicker" } })
                @Html.ValidationMessageFor(model => model.Activity.StartTime, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Activity.EndTime, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Activity.EndTime, new { htmlAttributes = new { @class = "form-control datepicker" } })
                @Html.ValidationMessageFor(model => model.Activity.EndTime, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Activity.Module, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("Activity.ModuelId", Model.ModuleList, "", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Activity.Module, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Activity.Type, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("Activity.TypeId", Model.Types, "", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Activity.Type, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="@( ((Model.Activity != null) ? "Spara ändringar" : "Lägg till") )" class="btn btn-default" />
            </div>
        </div>
    </div>
}

@foreach (var module in Model.Modules)
{
    <h3>@Html.DisplayFor(x => module.Name)</h3>

    <table class="table">

        <tr>
            <th>@Html.DisplayNameFor(x => module.Activities.First().Type.Name)</th>
            <th>@Html.DisplayNameFor(x => module.Activities.First().Name)</th>
            <th>@Html.DisplayNameFor(x => module.Activities.First().Description)</th>
            <th>@Html.DisplayNameFor(x => module.Activities.First().StartTime)</th>
            <th>@Html.DisplayNameFor(x => module.Activities.First().EndTime)</th>
            <th></th>
            <th></th>
        </tr>

        @foreach (var activity in module.Activities.OrderByDescending(x => x.Id))
        {
            <tr>
                <td>@Html.DisplayFor(x => activity.Type.Name)</td>
                <td>@Html.DisplayFor(x => activity.Name)</td>
                <td>@Html.DisplayFor(x => activity.Description)</td>
                <td>@Html.DisplayFor(x => activity.StartTime)</td>
                <td>@Html.DisplayFor(x => activity.EndTime)</td>
                <td>@Html.ActionLink("Redigera", "Create", new { courseId = Model.CourseId, activityId = activity.Id })</td>
                <td>@Html.ActionLink("Ta bort", "Delete", new { Id = activity.Id })</td>
            </tr>
        }
    </table>
}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/datepicker")
}
